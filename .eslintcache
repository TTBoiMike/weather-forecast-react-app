[{"C:\\Users\\micha\\Javascript-course\\api-calls\\weather-forecast-react-app\\src\\index.js":"1","C:\\Users\\micha\\Javascript-course\\api-calls\\weather-forecast-react-app\\src\\reportWebVitals.js":"2","C:\\Users\\micha\\Javascript-course\\api-calls\\weather-forecast-react-app\\src\\apiClient.js":"3","C:\\Users\\micha\\Javascript-course\\api-calls\\weather-forecast-react-app\\src\\components\\App.js":"4","C:\\Users\\micha\\Javascript-course\\api-calls\\weather-forecast-react-app\\src\\components\\search.js":"5","C:\\Users\\micha\\Javascript-course\\api-calls\\weather-forecast-react-app\\src\\components\\location.js":"6","C:\\Users\\micha\\Javascript-course\\api-calls\\weather-forecast-react-app\\src\\components\\forecast.js":"7"},{"size":511,"mtime":1610046816342,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":0,"mtime":1610038966234,"results":"11","hashOfConfig":"9"},{"size":2798,"mtime":1610402488648,"results":"12","hashOfConfig":"9"},{"size":1170,"mtime":1610213482089,"results":"13","hashOfConfig":"9"},{"size":4311,"mtime":1610397447091,"results":"14","hashOfConfig":"9"},{"size":2240,"mtime":1610397039657,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1vwwy8c",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"C:\\Users\\micha\\Javascript-course\\api-calls\\weather-forecast-react-app\\src\\index.js",[],["33","34"],"C:\\Users\\micha\\Javascript-course\\api-calls\\weather-forecast-react-app\\src\\reportWebVitals.js",[],"C:\\Users\\micha\\Javascript-course\\api-calls\\weather-forecast-react-app\\src\\apiClient.js",[],"C:\\Users\\micha\\Javascript-course\\api-calls\\weather-forecast-react-app\\src\\components\\App.js",[],"C:\\Users\\micha\\Javascript-course\\api-calls\\weather-forecast-react-app\\src\\components\\search.js",[],"C:\\Users\\micha\\Javascript-course\\api-calls\\weather-forecast-react-app\\src\\components\\location.js",["35","36","37"],"import React from 'react'\r\nimport Forecast from './forecast'\r\nimport { Accordion, Card, Button } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../App.css';\r\nimport D1 from '../assets/icons/01d.png'\r\nimport N1 from '../assets/icons/01n.png'\r\nimport D2 from '../assets/icons/02d.png'\r\nimport N2 from '../assets/icons/02n.png'\r\nimport D3 from '../assets/icons/03d.png'\r\nimport N3 from '../assets/icons/03n.png'\r\nimport D4 from '../assets/icons/04d.png'\r\nimport N4 from '../assets/icons/04n.png'\r\nimport D9 from '../assets/icons/09d.png'\r\nimport N9 from '../assets/icons/09n.png'\r\nimport D10 from '../assets/icons/10d.png'\r\nimport N10 from '../assets/icons/10n.png'\r\nimport D11 from '../assets/icons/11d.png'\r\nimport N11 from '../assets/icons/11n.png'\r\nimport D13 from '../assets/icons/13d.png'\r\nimport N13 from '../assets/icons/13n.png'\r\nimport D50 from '../assets/icons/50d.png'\r\nimport N50 from '../assets/icons/50n.png'\r\nimport Daytime from '../assets/daytime-header.jpg'\r\nimport Nighttime from '../assets/night-sky-header.jpg'\r\n\r\nclass Location extends React.Component {\r\n\r\n    displayIcon(code, time) {\r\n        if(time) {\r\n            switch(code) {\r\n                case \"01d\":\r\n                    return D1\r\n                case \"02d\":\r\n                    return D2\r\n                case \"03d\":\r\n                    return D3\r\n                case \"04d\":\r\n                    return D4\r\n                case \"09d\":\r\n                    return D9\r\n                case \"10d\":\r\n                    return D10\r\n                case \"11d\":\r\n                    return D11\r\n                case \"13d\":\r\n                    return D13\r\n                case \"50d\":\r\n                    return D50\r\n            }\r\n        } else {\r\n            switch (code) {\r\n                case \"01n\":\r\n                    return N1\r\n                case \"02n\":\r\n                    return N2\r\n                case \"03n\":\r\n                    return N3\r\n                case \"04n\":\r\n                    return N4\r\n                case \"09n\":\r\n                    return N9\r\n                case \"10n\":\r\n                    return N10\r\n                case \"11n\":\r\n                    return N11\r\n                case \"13n\":\r\n                    return N13\r\n                case \"50n\":\r\n                    return N50\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={this.props.appInformation.location === \"\" ? {display: \"none\"} : {display: \"block\"}} className=\"location\">\r\n                <div onClick={() => this.props.clearapp()} id=\"clear\"><h5>X</h5></div>\r\n                <div className=\"banner\" style={{backgroundImage: this.props.appInformation.currentWeather.isDayTime ? `url(${Daytime})` : `url(${Nighttime})`}}></div>\r\n                <div className=\"location-current-conditions\">\r\n                    <div className=\"current-weather-icon\">\r\n                        <img src={this.displayIcon(this.props.appInformation.iconDisplay, this.props.appInformation.currentWeather.isDayTime)}></img>\r\n                    </div>\r\n                    <h4>{this.props.appInformation.location}</h4>\r\n                    <p>{this.props.appInformation.currentWeather.summary}</p>\r\n                    <div>\r\n                        <h1 className=\"temp\">{Math.floor(this.props.appInformation.currentWeather.temperature)}<sup> o</sup>C</h1>\r\n                        <p>Wind speed: {this.props.appInformation.currentWeather.windSpeed} mph</p>\r\n                    </div>\r\n                </div>\r\n                <Accordion>\r\n                    <Card>\r\n                        <Card.Header>\r\n                        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                            <p><strong>View Weather Forecast</strong></p>\r\n                        </Accordion.Toggle>\r\n                        </Card.Header>\r\n                        <Accordion.Collapse eventKey=\"0\">\r\n                        <Card.Body>\r\n                            <Forecast forecast={this.props.appInformation.forecast} icon={this.displayIcon}/>\r\n                        </Card.Body>\r\n                        </Accordion.Collapse>\r\n                    </Card>\r\n                </Accordion>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Location","C:\\Users\\micha\\Javascript-course\\api-calls\\weather-forecast-react-app\\src\\components\\forecast.js",["38","39"],"import React from 'react'\r\n\r\nclass Forecast extends React.Component {\r\n\r\n    parseDate(dateTime) {\r\n        const days = [\r\n            \"Sunday\",\r\n            \"Monday\",\r\n            \"Tuesday\",\r\n            \"Wednesday\",\r\n            \"Thursday\",\r\n            \"Friday\",\r\n            \"Saturday\",\r\n          ];\r\n          const day = new Date(parseInt(dateTime) * 1000);\r\n          const today = new Date(Date.now());\r\n          let nameDay = days[day.getDay(day)];\r\n          const todayName = days[today.getDay(today)];\r\n          nameDay = nameDay === todayName ? \"Today\" : nameDay;\r\n          const months = [\r\n            \"January\",\r\n            \"Febuary\",\r\n            \"March\",\r\n            \"April\",\r\n            \"May\",\r\n            \"June\",\r\n            \"July\",\r\n            \"August\",\r\n            \"September\",\r\n            \"October\",\r\n            \"November\",\r\n            \"December\",\r\n          ];\r\n          const month = months[day.getMonth(day)];\r\n          const date = day.getDate(day);\r\n          const monthDate = month + \" \" + date;\r\n          return monthDate\r\n    }\r\n\r\n    buildForecastHTML() {\r\n        return this.props.forecast.map((day, i) => (\r\n            <section className=\"d-flex justify-content-between align-items-center forecast-container\" key={i} id={i}>\r\n                <div>\r\n                    <p><strong>{this.parseDate(day.dt)}</strong></p>\r\n                    <p className=\"forecast-text\">Summary: {day.weather[0].description}<br/>Wind speed: {Math.round(day.wind_speed)}mph<br/>Chance of rain: {Math.round(day.pop * 100)}%</p>\r\n                </div>\r\n                <div className=\"d-flex align-items-center\">\r\n                    <img src={this.props.icon(day.weather[0].icon, true)}></img>\r\n                    <div className=\"text-center\">\r\n                        <p className=\"forecast-temp-max\">{Math.round(day.temp.max)}<sup>o</sup>C</p>\r\n                        <p>{Math.round(day.temp.min)}<sup>o</sup>C</p>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        ))\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"forecast\">\r\n                {this.buildForecastHTML()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Forecast",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":31,"column":13,"nodeType":"46","messageId":"47","endLine":50,"endColumn":14},{"ruleId":"44","severity":1,"message":"45","line":52,"column":13,"nodeType":"46","messageId":"47","endLine":71,"endColumn":14},{"ruleId":"48","severity":1,"message":"49","line":82,"column":25,"nodeType":"50","endLine":82,"endColumn":144},{"ruleId":"51","severity":1,"message":"52","line":19,"column":55,"nodeType":"53","messageId":"54","endLine":19,"endColumn":62},{"ruleId":"48","severity":1,"message":"49","line":48,"column":21,"nodeType":"50","endLine":48,"endColumn":75},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'nameDay' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]